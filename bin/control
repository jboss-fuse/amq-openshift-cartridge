#!/bin/bash
source $OPENSHIFT_CARTRIDGE_SDK_BASH

AMQ_BIN_DIR=${OPENSHIFT_AMQ_DIR}container/bin
AMQ_PID_FILE=${OPENSHIFT_AMQ_DIR}container/instances/instance.properties
AMQ_PASSWD_FILE=${OPENSHIFT_AMQ_DIR}container/etc/passwd
AMQ_USRPROPS_FILE=${OPENSHIFT_AMQ_DIR}container/etc/users.properties
AMQ_SYSPROPS_FILE=${OPENSHIFT_AMQ_DIR}container/etc/system.properties
AMQ_BROKER_PROPERTIES_FILE=${OPENSHIFT_AMQ_DIR}container/etc/org.fusesource.mq.fabric.server-default.cfg
AMQ_KEYSTORE_FILE=${OPENSHIFT_AMQ_DIR}container/etc/keystore.jks
SETUP_CHECKER=${OPENSHIFT_AMQ_DIR}container/etc/amq-configured

function setup() {
	client_result "Setting up JBoss AMQ"

	# Retrieve password
	if [ -z "${OPENSHIFT_AMQ_PASSWORD:-}" ]; then
		# generate password and setup env vars
		client_result "Generating password"
		export OPENSHIFT_AMQ_PASSWORD=$(generate_password)
                set_env_var OPENSHIFT_AMQ_PASSWORD "${OPENSHIFT_AMQ_PASSWORD}" env
	fi
	
	# Store password
	echo "" > $AMQ_USRPROPS_FILE
	echo "admin=${OPENSHIFT_AMQ_PASSWORD},admin" > $AMQ_USRPROPS_FILE
	echo "${OPENSHIFT_AMQ_PASSWORD}" > $AMQ_PASSWD_FILE

  # Lets create a self generated cert for SSL
  keytool -genkey -storetype JKS -storepass "${OPENSHIFT_AMQ_PASSWORD}" -keystore "${AMQ_KEYSTORE_FILE}" -keypass "${OPENSHIFT_AMQ_PASSWORD}" -alias "${OPENSHIFT_GEAR_DNS}" -keyalg RSA -keysize 4096 -dname "cn=${OPENSHIFT_GEAR_DNS}" -validity 3650
  echo "" >> $AMQ_BROKER_PROPERTIES_FILE
  echo "keystore.password=${OPENSHIFT_AMQ_PASSWORD}" >> $AMQ_BROKER_PROPERTIES_FILE
  echo "truststore.password=${OPENSHIFT_AMQ_PASSWORD}" >> $AMQ_BROKER_PROPERTIES_FILE
  CERT=`keytool -exportcert -keystore "${AMQ_KEYSTORE_FILE}" -alias ${OPENSHIFT_GEAR_DNS} -storepass "${OPENSHIFT_AMQ_PASSWORD}" --rfc`

	client_result "AMQ created successfully.  Please make note of these credentials:"
	client_result ""
	client_result "   Console URL:        http://${OPENSHIFT_GEAR_DNS}"
	client_result "   Console User:       admin"
	client_result "   Console Password:   ${OPENSHIFT_AMQ_PASSWORD}"
	client_result ""
  client_result "SSL self signed certificate: "
  client_result "$CERT"

	# add_domain_env_var "OPENSHIFT_AMQ_DOMAIN_ZOOKEEPER_URL=${OPENSHIFT_AMQ_ZOOKEEPER_URL}"
	# add_domain_env_var "OPENSHIFT_AMQ_DOMAIN_ZOOKEEPER_PASSWORD=${OPENSHIFT_AMQ_PASSWORD}"

	cart_props "username=admin"
	cart_props "password=${OPENSHIFT_AMQ_PASSWORD}"
		
	${AMQ_BIN_DIR}/start
	wait_for_start    
	
	echo "true" > $SETUP_CHECKER
}

function start() {
	if [ ! -f $SETUP_CHECKER ]; then
		setup
	else
		${AMQ_BIN_DIR}/start
		wait_for_start    
	fi
    client_result "Started JBoss AMQ cart"
}

function stop() {
    if [ -f $AMQ_PID_FILE ];
        PID=`cat $AMQ_PID_FILE | grep "item.0.pid" | awk -F " = " '{print $2}'`
        ${AMQ_BIN_DIR}/stop
        for i in {1..20};
            do
                if ps -p $PID > /dev/null; then
                    echo "JBoss AMQ has been successfully stopped"
                    break
                else
                    sleep 3
                fi
            done
        client_result "Stopped JBoss AMQ cart"
    else
        echo "JBoss AMQ cart was stopped already"
    fi
}

function restart() {
    if is_running; then
        stop
    fi
    start
}

function status() {
   if is_running; then
      client_result "Application is running"
   else
      client_result "Application is either stopped or inaccessible"
   fi
}

function reload() {
    client_message "Reloading JBoss AMQ cart"
    restart
}

function tidy() {
  client_message "Emptying log dir: $OPENSHIFT_AMQ_LOG_DIR"
  shopt -s dotglob
  rm -rf $OPENSHIFT_AMQ_LOG_DIR/*
}

function is_running() {
   #Check if instance file exists
   if [ ! -f $AMQ_PID_FILE ]; then
      return 1
   fi

   #Check if pid exists
   PID=`cat $AMQ_PID_FILE | grep "item.0.pid" | awk -F " = " '{print $2}'`
   if [ "$PID" = "" ]; then
      return 1
   elif ps -p $PID > /dev/null; then
      return 0
   else
      return 1
   fi
}

function wait_for_start() {
  for i in {1..20};
     do
       if [ ! -f $AMQ_PID_FILE ]; then
         sleep 1
       else
         break
       fi
     done
   if [ -f $AMQ_PID_FILE ]; then
      for j in {1..20};
         do
           PID=`cat $AMQ_PID_FILE | grep "item.0.pid" | awk -F "=" '{print $2}'`
           if [ "$PID" = "" ]; then
             sleep 1
           else
            break
           fi
     done
     if ps -p $PID > /dev/null; then
       client_result "JBoss AMQ($PID) is started successfully"
     else
       client_error "Command Failed: JBoss AMQ process ($PID) is not running"
     fi
   else
    client_error "Command Failed:Could not find JBoss AMQ instance.properties"
   fi
}

function deploy() {
  echo "deployed"
}

case "$1" in
  deploy)    deploy ;;
  start)     start ;;
  stop)      stop ;;
  restart)   restart ;;
  status)    status ;;
  reload)    reload ;;
  tidy)      tidy ;;
  *)         exit 0
esac
